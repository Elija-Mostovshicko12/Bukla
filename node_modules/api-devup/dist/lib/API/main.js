var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import axios from "axios";
import * as Core from "../../core";
export class Builder {
    constructor(params) {
        this.RequestConfig = {
            headers: {
                "User-Agent": `api-devup@${Core.version}`,
            },
        };
        this.apiURL = Core.url;
        if (typeof params === "string") {
            this.token = params;
        }
        else {
            this.token = params.token;
            this.RequestConfig.headers =
                params.apiHeaders || this.RequestConfig.headers;
            this.apiURL = params.apiURL || this.apiURL;
        }
    }
    postRequest(method, 
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    data) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => {
                axios
                    .post(this.apiURL + method, Object.assign({ key: this.token }, data), this.RequestConfig)
                    .then((response) => {
                    if (response.data.err) {
                        reject(new Core.DevUpError(response.data.err));
                    }
                    resolve(response.data);
                })
                    .catch((err) => {
                    var _a, _b, _c, _d;
                    if (((_b = (_a = err.response) === null || _a === void 0 ? void 0 : _a.headers) === null || _b === void 0 ? void 0 : _b.server) === "ddos-guard") {
                        reject(new Core.DDOS_Guard());
                    }
                    if ((_d = (_c = err.response) === null || _c === void 0 ? void 0 : _c.data) === null || _d === void 0 ? void 0 : _d.err) {
                        reject(new Core.DevUpError(err.response.data.err));
                    }
                    else {
                        reject(err);
                    }
                });
            });
        });
    }
}
