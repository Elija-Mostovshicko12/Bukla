var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import { Builder } from "./../main";
import * as md5Generate from "./methods/md5Generate";
import * as getServerTime from "./methods/getServerTime";
import * as createShortLink from "./methods/createShortLink";
import * as notificationsLinks from "./methods/notificationsLinks";
import * as getWebInfo from "./methods/getWebInfo";
export default class Utils extends Builder {
    constructor(params) {
        super(params);
        this.md5Generate = (params) => __awaiter(this, void 0, void 0, function* () { return this.postRequest(md5Generate.method, params); });
        this.getServerTime = (params) => __awaiter(this, void 0, void 0, function* () { return this.postRequest(getServerTime.method, params); });
        this.createShortLink = (params) => __awaiter(this, void 0, void 0, function* () { return this.postRequest(createShortLink.method, params); });
        this.notificationsLinks = (params) => __awaiter(this, void 0, void 0, function* () { return this.postRequest(notificationsLinks.method, params); });
        this.getWebInfo = (params) => __awaiter(this, void 0, void 0, function* () { return this.postRequest(getWebInfo.method, params); });
    }
}
